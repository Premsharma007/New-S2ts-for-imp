Why Separate Tabs Are Better:
No Language Contamination: Fresh chat context for each language

Clean Slate: No residual context from previous translations

More Reliable: Avoids AI confusion between different language contexts

Easier Debugging: Isolated sessions for each translation



Implementation in modules/translator.py:
python
def translate_text(text: str, target_lang: str, engine_config: EngineConfig,
                  progress_callback=None) -> Tuple[str, float]:
    """
    Translate text to target language using FRESH Chrome tab for each translation.
    """
    if progress_callback:
        progress_callback(10, f"Starting {target_lang} translation...")
    
    start_time = time.time()
    
    # Load prompt
    translator_prompt = read_text(TRANSLATOR_PROMPT_FILE, DEFAULT_TRANSLATOR_PROMPT)
    
    if progress_callback:
        progress_callback(30, f"Opening FRESH Chrome tab for {target_lang}...")
    
    # Import here to avoid dependency issues
    from utils.gui_automation import GuiEngine
    
    # Initialize and run GUI engine - NEW TAB for each translation
    engine = GuiEngine(engine_config)
    engine.start()  # Opens fresh Chrome tab
    
    if progress_callback:
        progress_callback(60, f"Translating to {target_lang}...")
    
    translated = engine.send_and_get(translator_prompt, text, target_lang=target_lang)
    engine.stop()   # CLOSES the tab after this translation
    
    duration = time.time() - start_time
    
    if progress_callback:
        progress_callback(100, f"{target_lang} translation completed in {secfmt(duration)}")
    
    return translated, duration


In main.py - The Sequential Execution:
python
# Translation Stage - SEPARATE TAB FOR EACH LANGUAGE
translations = {}
trans_times = {}

for lang in enabled_languages:
    # FRESH TAB for each language
    translated_text, trans_time = translate_text(
        cleaned_text, lang, engine_config,
        progress_callback=make_progress_callback(lang)
    )
    
    translations[lang] = translated_text
    trans_times[lang] = trans_time
    
    # Save immediately after each translation completes
    lang_file = proj_dir / f"{base}-{lang}-Translated.txt"
    write_text(lang_file, translated_text)


    
Chrome Tab Lifecycle (Per Language):
Tab Opens → Fresh chat session for this language

Translation Executes → Clean context, no previous language contamination

Result Captured → Translation saved to file

Tab Closes → Clean exit, ready for next language